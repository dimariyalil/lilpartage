version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lilbet_partners_db
    restart: always
    environment:
      POSTGRES_DB: lilbet_partners
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: lilbet_partners_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Next.js App (for production deployment)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: lilbet_partners_app
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/lilbet_partners
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./.env.local:/app/.env.local

volumes:
  postgres_data:
  redis_data: